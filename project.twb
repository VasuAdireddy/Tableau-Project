<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='layoffs_data_new' inline='true' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='layoffs_data_new' name='textscan.0j5pld80xzfl9e1fcimgp0cw452b'>
            <connection class='textscan' directory='D:/Projects/Tableau' filename='layoffs_data_new.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0j5pld80xzfl9e1fcimgp0cw452b' name='layoffs_data_new.csv' table='[layoffs_data_new#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Company' ordinal='1' />
            <column datatype='string' name='Location' ordinal='2' />
            <column datatype='string' name='Industry' ordinal='3' />
            <column datatype='real' name='Laid_Off_Count' ordinal='4' />
            <column datatype='real' name='Percentage' ordinal='5' />
            <column datatype='datetime' name='Date' ordinal='6' />
            <column datatype='string' name='Source' ordinal='7' />
            <column datatype='real' name='Funds_Raised' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0j5pld80xzfl9e1fcimgp0cw452b' name='layoffs_data_new.csv' table='[layoffs_data_new#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Company' ordinal='1' />
            <column datatype='string' name='Location' ordinal='2' />
            <column datatype='string' name='Industry' ordinal='3' />
            <column datatype='real' name='Laid_Off_Count' ordinal='4' />
            <column datatype='real' name='Percentage' ordinal='5' />
            <column datatype='datetime' name='Date' ordinal='6' />
            <column datatype='string' name='Source' ordinal='7' />
            <column datatype='real' name='Funds_Raised' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Laid_Off_Count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Laid_Off_Count]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Laid_Off_Count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Percentage</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Funds_Raised</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Funds_Raised]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Funds_Raised</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[layoffs_data_new.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='percentage contribution' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Laid_Off_Count]) / TOTAL(SUM([Laid_Off_Count]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column aggregation='Sum' caption='path' datatype='real' name='[Calculation_1561623233524051973]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Company]&#13;&#10;WHEN {MIN([Company])} THEN 0&#13;&#10;ELSE [Laid_Off_Count]*270/{MAX([Laid_Off_Count])}&#13;&#10;END' />
      </column>
      <column caption='Pi' datatype='real' name='[Calculation_1561623233525014534]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='3.191426' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1561623233525149703]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(-SUM([Laid_Off_Count]))'>
          <table-calc ordering-field='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[Company]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Rank_Max' datatype='integer' name='[Calculation_1561623233525542920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX([Calculation_1561623233525149703])'>
          <table-calc ordering-field='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[path (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='X' datatype='real' name='[Calculation_1561623233525878793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COS((INDEX()-1)*[Calculation_1561623233525014534]/180)*[Calculation_1561623233525542920]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Y' datatype='real' name='[Calculation_1561623233526333450]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SIN((INDEX()-1)*[Calculation_1561623233525014534]/180)*[Calculation_1561623233525542920]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Company]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Funds Raised' datatype='real' name='[Funds_Raised]' role='measure' type='quantitative' />
      <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='layoffs_data_new.csv' datatype='table' name='[__tableau_internal_object_id__].[layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1]' role='measure' type='quantitative' />
      <column aggregation='None' caption='path (bin)' datatype='integer' name='[path (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_1561623233524051973]' peg='0' size='1' />
      </column>
      <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dubai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lisbon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington D.C.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florianópolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Non-U.S.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Paulo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Copenhagen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belo Horizonte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nebraska City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gothenburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malmo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sydney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guadalajara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tallin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Helsinki&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Blumenau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SF Bay Area&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Curitiba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joinville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gurugram&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tel Aviv&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ferdericton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stamford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Munich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zurich&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Company:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Airbnb&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cisco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Abra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Amperity&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Augury&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BigCommerce&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Borrowell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Built In&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clarify Health&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Compass&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cvent&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Doma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Emotive&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finite State&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Freshworks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GoodRx&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Help.com&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ibotta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Intercom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jump&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Koho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lendis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mercos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mux&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nutanix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Otonomo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pecan AI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Playdots&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quanterix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Revelate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sema4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shopify&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sonder&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stord&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Synapsica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The RealReal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Transfix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Twilio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UpScalio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vouch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wildlife Studios&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zendesk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ajaib&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argyle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benevity&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BlockFi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BookMyShow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bright Money&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Calibrate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chargebee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clutch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CrowdStreet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deputy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecobee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ezCater&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ForeScout&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glassdoor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hippo Insurance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HopSkipDrive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Infarm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JD.ID&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kickstarter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lattice&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liv Up&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malwarebytes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mogo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Noom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Opencare&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panda Squad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Picsart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Primer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redox&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Root Insurance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sendle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Smava&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Starry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Superhuman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Teladoc Health&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Truepill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unbabel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Veriff&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waze&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Xiaohongshu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AliExpress Russia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bevi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonsai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Briza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canoo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chime&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coinbase&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Culture Amp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Divvy Homes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Element AI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FourKites&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GoBear&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Happy Money&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hubba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inspirato&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jiobit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Klook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Legible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lendingkart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Loftium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maven&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Motive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Numbrs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Optimizely&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patreon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pitch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Remote Year&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rubius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shippo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Socure&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stay Alfred&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The Grommet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tonkean&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uniphore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vezeeta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WeWork&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zak&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ada Support&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antidote Health&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BitOasis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Branch Metrics&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bustle Digital Group&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ContaAzul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dapper Labs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EquityZen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flipboard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Funding Societies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GoSpotCheck&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Illumina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;iPrice Group&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kabam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kraken&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lighter Capital&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lunchbox&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Navi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Outschool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pendo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pluralsight&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qumulo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ribbon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Simple Feast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sourcegraph&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stripe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taboola&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thinkific&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Treehouse&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Usermind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VSCO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wonolo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zilingo&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Twitter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Acast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amplero&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BioMarin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bounce&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bullish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Career Karma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Compete&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cybereason&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Domestika&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Enjoy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finleap Connect&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frontdesk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GoPro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Heroes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;iFit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Introhive&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jumpcloud&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KoinWorks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lev&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Loop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MindBody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N26&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NYDIG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OutboundEngine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PaisaBazaar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peerspace&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pleo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Quanto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Revolut&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salsify&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Showpad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sonos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Storytel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Synergysuite&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The Sill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Transmit Security&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Twine Solutions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UPshow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vox Media&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zenefits&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peloton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;54gene&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astronomer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beyond Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BookClub&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bryter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capitolis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chipper Cash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CoinJar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Culture Trip&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elementor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FarEye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Foxtrot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GoBolt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hubilo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Instamojo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jobcase&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Knock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lemon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Livspace&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Loftsmart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MediaMath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Movidesk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NuoDB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OrCam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pavilion Data&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plaid&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qualtrics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RenoRun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rupeek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shipsi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SoFi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stedi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SWVL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;The Guild&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Top Hat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TuSimple&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Unison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VideoAmp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wheel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zego&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;DoorDash&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8x8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Airtable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aqua Security&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Blend&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bridgit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C2FO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Celsius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinc&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Credit Sesame&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deliveroo Australia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eatsy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Exodus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Food52&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GetNinjas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hootsuite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;InDebted&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jam City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khoros&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lastline&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Linktree&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mainstreet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Premier League&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Next Insurance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OneTrust&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Packable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Personetics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Postmates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redesign Health&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rock Content&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skyscanner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SQream&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TealBook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TIFIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TrueCar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vendease&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wayfair&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zume&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AlayaCare&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Berlin Brands Group&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Blueground&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brighte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Byju&apos;s&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Calm&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Checkmarx&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Code42&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cruise&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Descartes Labs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eden / Managed By Q&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FabHotels&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forma.ai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glints&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Horizn Studios&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;InfluxData&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JetClosing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kitopi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lawgeex&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LivePerson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marketforce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Momentive&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Notarize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Opendoor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Parler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Procore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reef&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sendy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Superpedestrian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Teleport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tomo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Truiloo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Unbounce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Verily&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wealthsimple&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yelp&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Amazon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2TM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ahead&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ApplyBoard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Back Market&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bizzabo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brex&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BuzzFeed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CleverTap&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coterie Insurance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deliv&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Earnin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eventbrite&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flywheel Sports&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gemini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenhouse Software&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Homie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Impossible Foods&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iron Ox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KeepTruckin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lacework&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LinkedIn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MadeiraMadeira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minute Media&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netlify&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;On Deck&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oye Rickshaw&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Polly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RealSelf&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rivian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scoop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skedulo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Springbig&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SummerBio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TCR2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thumbtack&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Triplebyte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Udayy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WorkRamp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zomato&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;99&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AtoB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BeyondMinds&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buenbit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CaptivateIQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chope&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coinsquare&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Docly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elinvar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fate Therapeutics&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Freetrade&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GoHealth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Headspace&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Huobi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Instructure&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JOKR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Knotel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lending Club&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Loggi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MakeMyTrip&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meesho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nuri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oriente&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PayJoy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Planetly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quandoo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Repertoire Immune Medicines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SafeGraph&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shogun&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sojern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stitch Fix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Swyft&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Mom Project&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TutorMundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Unity&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virgin Hyperloop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;When I Work&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zeitgold&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adaptive Biotechnologies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apartment List&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Away&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bitpanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brave Care&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Butler Hospitality&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clearbanc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ContraFect&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dropbox&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethos Life&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flockjay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;G2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GoTo Group&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hireology&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Immersive Labs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iris Nova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kaltura&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lightricks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lusha&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;nCino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Omie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Outside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;People.ai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pocketmath&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rad Power Bikes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ridecell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sandbox VR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SIRCLO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Studio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tally&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ThirdLove&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uber&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uberflip&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;uShip&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VTEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wordstream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zillow&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Salesforce&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Microsoft&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Addepar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;App Annie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bitso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Breathe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Button&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CityMall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ClearCo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Convene&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DataRails&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dutchie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;eToro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flyhomes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gather&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grab&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hologram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Immutable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Katerra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lightspeed Commerce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lyft&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Neon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Olive&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Overtime&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Perimeter 81&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PolicyGenius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rasa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RigUp&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sauce Labs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sisense&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Splunk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Submittable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tamara Mellon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thread&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TripActions&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Udaan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unacademy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Varonis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WalkMe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Workable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zipcar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6sense&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alto Pharmacy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aqgromalin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Banxa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BlackLine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bridge Connector&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Careem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cazoo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ClickUp&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crayon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deliveroo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EasyPost&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Everlane&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flywire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Getaround&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenlight&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HOOQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Incredible Health&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IronNet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenoby&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ladder Life&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Linkfire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Magic Leap&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mixpanel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Relic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OneFootball&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pacaso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pomelo Fashion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Recharge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robinhood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Segment&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skillz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spyce&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SumUp&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Teachmint&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tier Mobility&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TripleLift&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UiPath&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Veev&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wave Sports and Entertainment&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Worksmith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zoox&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Gopuff&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10X Genomics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Airtime&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Argo AI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bench&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blockchain.com&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bright Machines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cadre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cerebral&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cloudinary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crejo.Fun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Demandbase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ebanx&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Exotel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Foodsby&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GetYourGuide&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Group Nine Media&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hopin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Industrious&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiavi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moglix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niantic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OneWeb&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PerkSpot&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PickYourTrail&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Preply&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redfin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roku&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SEND&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SmartNews&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stack Overflow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SundaySky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TechTarget&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tipalti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TrueLayer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Verbit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wayflyer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Xentral&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zumper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Acko&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Automation Anywhere&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bird&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BounceX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BusBud&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CarGurus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ConsenSys&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CyCognito&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Domo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Envoy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiverr&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FrontRow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gorillas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hibob&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iflix&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Intuit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Juni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Komodo Health&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lever&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Loopio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metigy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nylas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Outbrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PeerStreet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pliops&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quidax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rhino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sami&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ShareChat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sidecar Health&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sophos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stream&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Synthego&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TheSkimm&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TravelTriangle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upstart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Voyage SMS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wonder&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zenoti&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Snap&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;&amp;Open&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American Robotics&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atsu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boozt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Builder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carbon Health&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ChowNow&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Community&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curve&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DocuSign&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Embroker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fifth Season&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freshbooks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gojek&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HealthMatch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyperscience&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Integral Ad Science&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jumio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kodiak Robotics&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lokalise&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mejuri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MFine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mural&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nuro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oscar Health&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pear Therapeutics&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plato&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quantcast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ResearchGate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sage Therapeutics&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shop101&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soluto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;StockX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SynapseFI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The Predictive Index&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TouchBistro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Twiga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Unstoppable Domains&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Voi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WHOOP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zencity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albert&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arrive Logistics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bestow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bluprint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bringg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cameo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cars24&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Checkout.com&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coding Dojo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crypto.com&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DialSource&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Edgio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fabric&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Glitch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GumGum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hotmart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;InfoSum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jetty&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kitty Hawk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LEAD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MasterClass&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monzo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NS8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OpenWeb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parsable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pipedrive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Project44&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Relativity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rows&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sensibill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Snappy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stash Financial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swappie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Textio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tomorrow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trybe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uncapped&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VerSe Innovation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Weee!&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yojak&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Toast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1stdibs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AdRoll&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AppLovin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B8ta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BitTitan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Breather&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Buy.com / Rakuten&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carwow&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clearco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Convoy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DataRobot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dynamic Signal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eucalyptus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flytedesk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GrayMeta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Homebot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Impala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;iRobot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kayak / OpenTable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kueski&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lime&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lyst&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minted&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netflix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OwnBackup&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Perion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pollen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritual&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ScaleFactor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Skai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SpotHero&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Substack&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TaskUs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thriver&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TripAdvisor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Udacity&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vedantu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WanderJaunt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Workmotion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ZipRecruiter&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Better.com&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Groupon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anodot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AvantStay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BitMEX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buser&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carousell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ClassPass&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Consider.co&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D2iQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equitybee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Flexport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fundbox&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Highsnobiety&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ike&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Involves&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Juul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kontist&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liftoff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LoopMe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metromile&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ocavu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Outreach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Permutive&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;QuintoAndar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rhumbix&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samsara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SimilarWeb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SoundHound&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;StreamElements&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swiggy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thimble&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trax&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ualá&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Urban Sports Club&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vroom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wonderschool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zeus Living&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Carvana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BharatAgri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Britishvolt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Candy Digital&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Checkr&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cogito&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CTO.ai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CureFit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Divergent 3D&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;eGym&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Facily&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forward&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glossier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gympass&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Houzz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Innovaccer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jimdo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Klarna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leafly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Loft&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matterport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moss&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NSO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OpenX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PatientPop&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pipl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puppet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Remote&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rubicon Project&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Snyk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stashaway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweetgreen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;The Athletic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tonal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tufin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Unico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vesalius Therapeutics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Welkin Health&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yotpo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Company' />
        <field-sort-custom-order field='Calculation_1561623233524051973' />
        <field-sort-custom-order field='Location' />
        <field-sort-custom-order field='Industry' />
        <field-sort-custom-order field='Laid_Off_Count' />
        <field-sort-custom-order field='Percentage' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Source' />
        <field-sort-custom-order field='Funds_Raised' />
        <field-sort-custom-order field='Country' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='layoffs_data_new.csv' id='layoffs_data_new.csv_518C654B7088488FA0FA42459B5092D1'>
            <properties context=''>
              <relation connection='textscan.0j5pld80xzfl9e1fcimgp0cw452b' name='layoffs_data_new.csv' table='[layoffs_data_new#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Company' ordinal='1' />
                  <column datatype='string' name='Location' ordinal='2' />
                  <column datatype='string' name='Industry' ordinal='3' />
                  <column datatype='real' name='Laid_Off_Count' ordinal='4' />
                  <column datatype='real' name='Percentage' ordinal='5' />
                  <column datatype='datetime' name='Date' ordinal='6' />
                  <column datatype='string' name='Source' ordinal='7' />
                  <column datatype='real' name='Funds_Raised' ordinal='8' />
                  <column datatype='string' name='Country' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1_F95D8EA6DF3E41839F798A930A1AB29E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Company,Country,Industry' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action2_35279708CA204BBE99B6C57A0E0EB447]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action3_4E532AEA8733466DB8015E7C699E5EEE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Top 5 Countries with MAX layoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Laid_Off_Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]' />
              <wedge-size column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Tableau Medium' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CE371685-B14D-4C82-BDB8-67E118B9D8A0}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'> Industry wise Top Countries with MAX Layoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Laid_Off_Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]</rows>
        <cols>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]</cols>
      </table>
      <simple-id uuid='{94EDB29C-52F4-4AEB-A220-428B88690BB3}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Top 15 Companies with MAX layoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Laid_Off_Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Company:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#dfedeb' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#dfedeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#dfedeb' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#d4a6c8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]</rows>
        <cols>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]</cols>
      </table>
      <simple-id uuid='{BA5241C4-D20E-453D-8461-3DA8AB55086B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Top Indian Companies with MAX layoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Laid_Off_Count])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Acko&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Aqgromalin&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;BharatAgri&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;BookMyShow&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bounce&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Breathe&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bright Money&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Byju&apos;s&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Cars24&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;CityMall&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Clear&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;CleverTap&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Crejo.Fun&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;CureFit&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Exotel&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;FabHotels&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;FarEye&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;FrontRow&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Instamojo&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;LEAD&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lendingkart&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Livspace&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;MakeMyTrip&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Meesho&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;MFine&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Mobile Premier League&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Navi&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ola&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Oye Rickshaw&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;PaisaBazaar&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;PickYourTrail&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Plum&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Rupeek&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;ShareChat&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Shop101&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Swiggy&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Synapsica&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Teachmint&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;TravelTriangle&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Trell&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Uber&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Udaan&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Udayy&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Unacademy&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;UpScalio&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Vedantu&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;VerSe Innovation&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;WeWork&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Yojak&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Zomato&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</column>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#e2e6f0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#e2e6f0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e2e6f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <color column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E5C34C87-3177-4058-8DC0-5BEB6062B1F4}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Top Industries with more layoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' palette='gray_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <color column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-missing' ignore-last='1' model-type='auto' range-periods='Year-Trunc' range-size='5' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{DB335E87-2800-471F-A787-A0B7E8756797}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Industry Wise Layoffs in India along with companies</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#e2e6f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <lod column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#8f82a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]</rows>
        <cols>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]</cols>
      </table>
      <simple-id uuid='{E45F96D8-8029-4A04-8FF2-B853B8A4097D}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Top Indian Industries with MAX layoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e2e6f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <color column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C5F1AD44-A921-4F9E-843F-5AC8D36E9FBB}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Top United States Companies with MAX Layoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Laid_Off_Count])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Company:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;&amp;Open&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;2TM&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;99&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Acast&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Acko&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ada&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ada Support&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ajaib&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;AlayaCare&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Alice&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;AliExpress Russia&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Antidote Health&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;ApplyBoard&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Aqgromalin&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Aqua Security&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Avo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Back Market&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Banxa&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bench&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Berlin Brands Group&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;BeyondMinds&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;BharatAgri&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;BitMEX&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;BitOasis&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bitpanda&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bitso&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Blockchain.com&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bonsai&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;BookMyShow&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Boozt&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Borrowell&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bounce&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Breathe&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Breather&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bridgit&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bright Machines&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bright Money&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Brighte&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bringg&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Britishvolt&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Briza&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bryter&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Buenbit&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bullish&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;BusBud&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Buser&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Byju&apos;s&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Careem&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Carousell&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Cars24&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Carwow&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Cazoo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Checkmarx&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Checkout.com&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Chope&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;CityMall&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Clear&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Clearbanc&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Clearco&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;ClearCo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;CleverTap&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Clutch&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;CoinJar&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Coinsquare&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Compete&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;ContaAzul&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Crejo.Fun&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Crypto.com&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;CTO.ai&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Culture Amp&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Culture Trip&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;CureFit&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Curve&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;DataRails&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Deliveroo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Deliveroo Australia&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Deputy&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Dock&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Docly&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Eatsy&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ebanx&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ecobee&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;eGym&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Element AI&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Elementor&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Elinvar&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;eToro&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Exotel&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;FabHotels&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Facily&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;FarEye&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Finleap Connect&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Fiverr&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Forma.ai&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Freetrade&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Freshbooks&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;FrontRow&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Funding Societies&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;GetNinjas&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;GetYourGuide&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Glints&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;GoBear&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;GoBolt&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Gojek&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Gorillas&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;GoTo Group&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Grab&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Gympass&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Hash&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;HealthMatch&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Hibob&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Highsnobiety&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;HOOQ&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Hootsuite&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Hopin&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Horizn Studios&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Hotmart&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Hubba&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Huobi&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Iflix&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Immersive Labs&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Immutable&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Impala&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;InDebted&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Infarm&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;InfoSum&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Instamojo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Introhive&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Involves&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;iPrice Group&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;JD.ID&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Jimdo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Juni&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Kenoby&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Klarna&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Klook&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Koho&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;KoinWorks&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Kontist&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Kry&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Kuda&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Kueski&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lawgeex&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;LEAD&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Legible&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lemon&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lendingkart&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lendis&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lightricks&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lightspeed Commerce&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Linkfire&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Linktree&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Liv Up&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Livspace&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Loft&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Loggi&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Loopio&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;LoopMe&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lyst&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;MadeiraMadeira&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;MakeMyTrip&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Marketforce&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Meesho&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Mejuri&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Mercos&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Metigy&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;MFine&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Minute Media&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Mobile Premier League&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Moglix&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Mogo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Monzo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Moss&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Movidesk&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Navi&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Neon&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;NSO&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Numbrs&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Nuri&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Oda&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ola&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Omie&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;OneFootball&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;OneWeb&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Opencare&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;OpenWeb&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;OrCam&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Oriente&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Otonomo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Oye Rickshaw&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;PaisaBazaar&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Pecan AI&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Perimeter 81&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Perion&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Permutive&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;PickYourTrail&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Pier&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Pipedrive&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Pitch&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Planetly&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Pliops&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Plum&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Pocketmath&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Pollen&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Pomelo Fashion&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Primer&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Q4&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Quandoo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Quanto&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Quidax&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;QuintoAndar&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Rasa&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;RenoRun&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;ResearchGate&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Revelate&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Revolut&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ritual&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Rock Content&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Rows&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Rupeek&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Sami&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Sanar&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;SEND&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Sendle&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Sendy&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Sensibill&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;ShareChat&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Shop101&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Shopify&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Simple Feast&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;SIRCLO&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Skai&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Skyscanner&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Smava&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Soluto&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Stashaway&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Storytel&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;StreamElements&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;SumUp&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Swappie&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Swiggy&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;SWVL&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Swyft&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Synapsica&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Syte&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Teachmint&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;TealBook&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Thinkific&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Thread&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Thriver&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Tier Mobility&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Tomorrow&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Top Hat&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;TouchBistro&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;TravelTriangle&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Trax&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Trell&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Truiloo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Trybe&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;TutorMundi&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Twiga&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Twine Solutions&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ualá&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Uber&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Uberflip&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Udaan&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Udayy&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Ula&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Unacademy&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Unbabel&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Unbounce&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Uncapped&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Unico&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;UpScalio&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Urban Sports Club&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Vedantu&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Vee&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Vendease&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Veriff&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;VerSe Innovation&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Vezeeta&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;VTEX&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Wave&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Wayflyer&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Wealthsimple&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;WeWork&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Wildlife Studios&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Xentral&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Xiaohongshu&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Yojak&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Zego&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Zeitgold&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Zencity&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Zilingo&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='&quot;Zomato&quot;' />
                    <groupfilter function='member' level='[none:Company:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</column>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' />
              <size column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{75C66272-FA69-418F-84F9-F14CFC4D2185}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Top United States Industries with MAX Layoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_data_new' name='federated.1xtgirp1vcgkt615ev5vy1xb0juw' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtgirp1vcgkt615ev5vy1xb0juw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Laid_Off_Count])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Industry:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Industry:nk]' member='&quot;Hardware&quot;' />
                    <groupfilter function='member' level='[none:Industry:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</column>
            <column>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <color column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]' />
              <text column='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0C6BC61F-AEA4-470C-9207-F31A5DCC6A1E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#dfedeb' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='1000' maxwidth='1700' minheight='1000' minwidth='1700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='40' param='vert' type-v2='layout-flow' w='99058' x='471' y='800'>
            <zone h='98400' id='14' param='horz' type-v2='layout-flow' w='99058' x='471' y='800'>
              <zone h='98400' id='5' type-v2='layout-basic' w='99058' x='471' y='800'>
                <zone h='49200' id='3' name='Sheet 1' w='49529' x='471' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49200' id='9' name='Sheet 2' w='49529' x='471' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49200' id='12' name='Sheet 4' w='49529' x='50000' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49200' id='16' name='Sheet 10' w='49529' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='49' param='vert' type-v2='layout-flow' w='99058' x='471' y='800'>
                <zone fixed-size='280' h='49200' id='3' is-fixed='true' name='Sheet 1' w='49529' x='471' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49200' id='12' is-fixed='true' name='Sheet 4' w='49529' x='50000' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49200' id='9' is-fixed='true' name='Sheet 2' w='49529' x='471' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49200' id='16' is-fixed='true' name='Sheet 10' w='49529' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E4B8EE22-E315-4EC8-A09F-97AC2D6E3429}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e2e6f0' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#e2e6f0' />
        </style-rule>
      </style>
      <size maxheight='968' maxwidth='1666' minheight='968' minwidth='1666' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98348' id='15' param='horz' type-v2='layout-flow' w='99040' x='480' y='826'>
            <zone h='98348' id='5' type-v2='layout-basic' w='99040' x='480' y='826'>
              <zone h='98348' id='3' name='Sheet 3' w='39976' x='480' y='826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49174' id='10' name='Sheet 7' w='59064' x='40456' y='826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49174' id='13' name='Sheet 6' w='59064' x='40456' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98348' id='46' param='vert' type-v2='layout-flow' w='99040' x='480' y='826'>
                <zone fixed-size='280' h='98348' id='3' is-fixed='true' name='Sheet 3' w='39976' x='480' y='826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49174' id='10' is-fixed='true' name='Sheet 7' w='59064' x='40456' y='826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49174' id='13' is-fixed='true' name='Sheet 6' w='59064' x='40456' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EA942EAF-18B3-4C00-BF02-B7A5938A24E2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5eddc' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1224' minheight='768' minwidth='1224' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='13' param='vert' type-v2='layout-flow' w='98692' x='654' y='1042'>
            <zone h='97916' id='7' param='horz' type-v2='layout-flow' w='98692' x='654' y='1042'>
              <zone h='97916' id='5' type-v2='layout-basic' w='98692' x='654' y='1042'>
                <zone h='97916' id='3' name='Sheet 8' w='49346' x='654' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='97916' id='9' name='Sheet 9' w='49346' x='50000' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='44' param='vert' type-v2='layout-flow' w='98692' x='654' y='1042'>
                <zone fixed-size='280' h='97916' id='3' is-fixed='true' name='Sheet 8' w='49346' x='654' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97916' id='9' is-fixed='true' name='Sheet 9' w='49346' x='50000' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BF04D014-43BF-4289-931C-BCB1BD770FB7}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>LayOffs Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='1264' maxwidth='1616' minheight='1264' minwidth='1616' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98734' id='6' param='vert' removable='false' type-v2='layout-flow' w='99010' x='495' y='633'>
            <zone h='3323' id='8' type-v2='title' w='99010' x='495' y='633' />
            <zone h='7991' id='9' is-fixed='true' paired-zone-id='10' removable='false' type-v2='flipboard-nav' w='99010' x='495' y='3956' />
            <zone h='87420' id='10' paired-zone-id='9' removable='false' type-v2='flipboard' w='99010' x='495' y='11947'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='false'>
                <story-points>
                  <story-point caption='Overall Analysis' captured-sheet='Dashboard 1' id='1' />
                  <story-point caption='Analysis in India' captured-sheet='Dashboard 2' id='2' />
                  <story-point caption='Analysis in USA' captured-sheet='Dashboard 3' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{3ADCDB62-F38E-40C3-A0FF-9FFB59462D61}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C03052D6-2E60-42D2-A77B-6D7EE3AAAD52}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{445A076E-050B-471D-9A6C-AE4270351001}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Forecast Indicator:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{577C0784-E8CC-458A-AA6F-58AC30B1E831}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B606953-2754-4873-847C-567963F87572}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C13B63C3-D855-47DA-9FEB-F0A47A917ACD}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD6DDF08-48C7-4A1F-8425-7E4AD840C4F0}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A835E9C-AB1B-41B3-A811-16049993E4AB}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Company:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE218218-E59D-4D62-A21D-2228DD686269}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[sum:Laid_Off_Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Country:nk]</field>
            <field>[federated.1xtgirp1vcgkt615ev5vy1xb0juw].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE405551-482E-40D2-8888-C60A0AC5A183}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Sheet 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{2426E92D-BD39-475D-A110-D172E53361F7}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{22E37C54-977C-40C2-B101-35FAD50DA8CD}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 9'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <device-preview visible='true' />
      <simple-id uuid='{207DA96D-CEEC-4C40-9FEC-8686E6161B7E}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{6B7D0414-0353-460F-8FCC-D0642EAFB6C2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      RjoAAKSnxP+oLErZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      TUEBCtzS/P9RLxkq5mgeHQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      BNr/B1sQ8k0tkvThAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      ZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      Qtl4NgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
